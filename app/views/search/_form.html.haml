= form_with(scope: :search, url: "/search", method: "get", local: true) do |f|
  .form-group.form-row
    = f.label(:query, "Text", class: 'col-md-2 col-lg-1 col-form-label text-md-right text-md-right')
    .col-md-6
      = f.search_field(:query, value: params[:search][:query], class: 'form-control input-sm')
  .form-group.form-row
    = f.label(:after, "After", class: 'col-md-2 col-lg-1 col-form-label text-md-right')
    .col-md-6.input-group.date#after{data: {target: {input: 'nearest'}}}
      %input.form-control.datetimepicker-input{name: 'search[after]', type: 'text', data: {target: '#after'}}
      .input-group-append{data: {target: '#after', toggle: 'datetimepicker'}}
        .input-group-text
          %i.far.fa-calendar
  .form-group.form-row
    = f.label(:before, "Before", class: 'col-md-2 col-lg-1 col-form-label text-md-right')
    .col-md-6.input-group.date#before{data: {target: {input: 'nearest'}}}
      %input.form-control.datetimepicker-input{name: 'search[before]', type: 'text', data: {target: '#before'}}
      .input-group-append{data: {target: '#before', toggle: 'datetimepicker'}}
        .input-group-text
          %i.far.fa-calendar
  .form-group.form-row
    = f.label(:channel_id, "Channel", class: 'col-md-2 col-lg-1 col-form-label text-md-right')
    .col-md-6
      = f.collection_select(:channel_id, @channels, :id, :name,
        { selected: params[:search][:channel_id], include_blank: true },
        { class: 'custom-select' })
  .form-group.form-row
    = f.label(:user_id, "User", class: 'col-md-2 col-lg-1 col-form-label text-md-right')
    .col-md-6
      = f.collection_select(:user_id, @users, :id, :display_name,
        { selected: params[:search][:user_id], include_blank: true },
        { class: 'custom-select' })
  .form-group.form-row
    .offset-md-2.offset-lg-1.pl-1
      = f.submit("Search", class: 'btn btn-primary btn-sm')
%script{type: 'text/javascript'}
  $.fn.datetimepicker.Constructor.Default = $.extend({}, $.fn.datetimepicker.Constructor.Default, {
  icons: {
  time: 'far fa-clock',
  date: 'far fa-calendar',
  up: 'fas fa-arrow-up',
  down: 'fas fa-arrow-down',
  previous: 'fas fa-chevron-left',
  next: 'fas fa-chevron-right',
  today: 'far fa-calendar-check',
  clear: 'far fa-trash',
  close: 'far fa-times'
  } });
  $(function () {
  $('#after').datetimepicker({
  defaultDate: '#{params[:search][:after].iso8601}',
  allowInputToggle: true,
  format: 'YYYY-MM-DD hh:mma'
  });
  $('#before').datetimepicker({
  defaultDate: '#{params[:search][:before].iso8601}',
  allowInputToggle: true,
  format: 'YYYY-MM-DD hh:mma'
  });
  $("#after").on("change.datetimepicker", function (e) {
  $('#before').datetimepicker('minDate', e.date);
  });
  $("#before").on("change.datetimepicker", function (e) {
  $('#after').datetimepicker('maxDate', e.date);
  });
  });